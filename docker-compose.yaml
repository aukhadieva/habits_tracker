version: '3'

services:
  bd:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - '5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER']
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    env_file:
      - .env
    ports:
      - '8000:8000'
    command: sh -c 'python manage.py migrate && python manage.py csu && python manage.py runserver 0.0.0.0:8000'
    depends_on:
      bd:
        condition: service_healthy
    volumes:
      - .:/app

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - '6379'

  celery:
    build: .
    tty: true
    env_file:
      - .env
    restart: on-failure
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    depends_on:
      - redis
      - bd
      - app

  celery-beat:
    build: .
    tty: true
    env_file:
      - .env
    restart: on-failure
    command: celery -A config beat -l INFO -S django
    volumes:
      - .:/app
    depends_on:
      - redis
      - bd
      - app

volumes:
  pg_data:
